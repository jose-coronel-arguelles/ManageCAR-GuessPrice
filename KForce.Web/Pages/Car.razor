@page "/Car"
@page "/Car/Edit/{id:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject KForce.Web.Service.ICarService carService

@if (Id == null)
{
    <PageTitle>Create a new Car</PageTitle>
    <h3>Create a new Car</h3>
}
else
{
    <PageTitle>Edit Car</PageTitle>
    <h3>Edit Car</h3>
}

<EditForm Model="car" OnSubmit="HandleSubmit">

    <div>
        <label for="Make">Make</label>
        <InputText id="Make" @bind-Value="car.Make" class="form-control"></InputText>
    </div>

    <div>
        <label for="Model">Model</label>
        <InputText id="Model" @bind-Value="car.Model" class="form-control"></InputText>
    </div>

    <div>
        <label for="Year">Year</label>
        <InputNumber id="Year" @bind-Value="car.Year" class="form-control"></InputNumber>
    </div>

    <div>
        <label for="Color">Color</label>
        <InputText id="Color" @bind-Value="car.Color" class="form-control"></InputText>
    </div>

    <div>
        <label for="Price">Price</label>
        <InputNumber id="Price" @bind-Value="car.Price" class="form-control"></InputNumber>
    </div>
    <br />

    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="GoBack">Cancel</button>
</EditForm>


@code {
    [Parameter]
    public int? Id { get; set; }

    Models.Car car = new Models.Car();

    string btnText = string.Empty;


    protected override async Task OnInitializedAsync()=> btnText = Id == null ? "Save New Car" : "Update Car";
    
    async Task HandleSubmit()
    {
        if (Id == null)        
            await carService.CreateCar(car);        
        else        
            await carService.UpdateCar(car);               
    }

    private void GoBack()=> NavigationManager.NavigateTo("/");
    
}
